<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="net.vignesh.springbootrestapi.bean.Student"/>
    <fullyQualifiedTypeName name="org.mapstruct.Mapping"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.microservices.demo.entity.Department"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="com.kafka.kafka.KafkaProducer"/>
    <fullyQualifiedTypeName name="com.kafka.kafka.KafkaConsumer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.Message"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.support.MessageBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.KafkaHeaders"/>
    <fullyQualifiedTypeName name="com.kafka.kafka.JsonKafkaProducer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.admin.NewTopic"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.TopicBuilder"/>
    <fullyQualifiedTypeName name="com.kafka.kafka.JsonKafkaConsumer"/>
    <fullyQualifiedTypeName name="com.kafka.payload.User"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="com.rabbitmq.springboot.publisher.RabbitMQProducer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.rabbitmq.springboot.consumer.RabbitMQConsumer"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.rabbit.annotation.RabbitListener"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.support.converter.MessageConverter"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.core.AmqpTemplate"/>
    <fullyQualifiedTypeName name="com.rabbitmq.client.ConnectionFactory"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.rabbit.connection.ConnectionFactory"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.rabbit.core.RabbitTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.rabbitmq.springboot.publisher.RabbitMQJsonProducer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="com.rabbitmq.springboot.dto.User"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
</qualifiedTypeNameHistroy>
